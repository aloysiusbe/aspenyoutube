<?php
/**
 * @file
 * The aspenyoutube module provides a block with aspen ideas youtube channel information via Jsn.
 */

/**
 * Implementation of hook_help().
 */
function aspenyoutube_help($path, $args) {
  if ($path == 'admin/help#aspenyoutube') {
    return t('To use this module, go to the block page and turn on the aspenyoutube block.');
  }
}
/**
 * Implements hook_block_info().
 */
function aspenyoutube_block_info() {
  $blocks = array();
  
  $blocks['aspenyoutube_one'] = array(
    'info' => t('Aspen Ideas Youtube New Videos'),
    'cache' => DRUPAL_NO_CACHE,);
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function aspenyoutube_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'aspenyoutube_one':
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $block['subject'] = t('Aspen Ideas Youtube');
      // The content of the block is typically generated by calling a custom
      // function.
      $block['content'] = array();
//Variable set-up.
$resultsAmounthardcode = 20;
$keyWord = 'aif12';
$developerKey = 'xxxxxxEZospc4apgkPkoFL8LOM4QYIt3ugF-6Q';
$channelId = 'UCoiTVuiMdqBRMSBGMEcmxCw';
//Making the call to youtube data api and getting the Json contents using drupal http request.

$jsondata = drupal_http_request("https://www.googleapis.com/youtube/v3/search?part=id%2Csnippet&channelId=".$channelId."&maxResults=".$resultsAmounthardcode."&q=".$keyWord."&key=".$developerKey);
$json = drupal_json_decode($jsondata->data);

//More Variable set-up and using Drupal Json_decode function to decode the url contents to parse.

$firstVideoNum = 0;
$secondVideoNum = 1;
$resultsAmount = (count($json['items']) -1);
$mainVideoId = $json['items'][$firstVideoNum]['id']['videoId'];
$mainTitle = $json['items'][$firstVideoNum]['snippet']['title'];
$mainTitle = preg_replace('/[^A-Za-z0-9 \?!]/', '', $mainTitle);
$mainDescrip = $json['items'][$firstVideoNum]['snippet']['description'];
$mainDescrip = preg_replace('/[^A-Za-z0-9 \?!]/', '', $mainDescrip)."...";
$postServer = htmlspecialchars($_SERVER["PHP_SELF"]);

//adding css for this module.
drupal_add_css(drupal_get_path('module', 'aspenyoutube') . '/default7.css', array('group' => CSS_DEFAULT, 'type' => 'file'));

//Static container div set up for mobile activated in css when screen is smaller.
$block['content'] ="<div id='newvideoStatic'>";
//Main Video container div set up.
$block['content'] .="<div id='newvideomainContainer'>";
$block['content'] .="<div class='newvideoContainer'><iframe id='mainvideo' name='mainvideo' src='//www.youtube.com/embed/$mainVideoId?rel=0' frameborder='0' allowfullscreen></iframe></div>";
//main title and description divs set up. 
$block['content'] .="<div id='maintext'><h4>$mainTitle</h4><p>$mainDescrip</p></div>";
//rendering the form array set up in this module. 

$block['content'] .="</div>";
$block['content'] .="</div>";

//Div set up for thumbnails.
$block['content'] .="<div id='newvideoThumbContent'>";
for ($i = $secondVideoNum; $i <= ($resultsAmount); $i++){

$vidId = $json['items'][$i]['id']['videoId'];
$title = $json['items'][$i]['snippet']['title'];
$title = preg_replace('/[^A-Za-z0-9 \?!]/', '', $title);
$titleCut = substr($title , 0, 100);
$descrip = $json['items'][$i]['snippet']['description'];
$descrip = preg_replace('/[^A-Za-z0-9 \?!]/', '', $descrip)."...";
$thumb = $json['items'][$i]['snippet']['thumbnails']['medium']['url'];

$block['content'] .="<div id='newvideoThumb'><a href='http://www.youtube.com/embed/$vidId?autoplay=1&amp;rel=0' target='mainvideo' onclick='document.getElementById(\"maintext\").innerHTML=\"<h2>$title</h2><p>$descrip</p>\"'><img id='newvideoThumbpic' src='$thumb' alt='Aspen Ideas Video' /></a><div id='newvideoThumbdesc'><h4>$title</h4><p>$descrip</p></div></div>";
}
$block['content'] .="</div>";
$block['content'] .="</div>";

  return $block;
     break;

    case 'example_empty':
      $block['subject'] = t('Title of second block (example_empty)');
      $block['content'] = '';
	    return $block;
      break;

  }

}

function aspenyoutubeinput_form($form, &$form_state) {
        // Now the fun begins. 
        // we will only provide two form elements.
        // 1. an input for the keyword
        // 2. a submit button
        // You can add as much or as little to this form as
        // needed.  See the forms api for all possible elements.
 
        $form['keywordtwo'] = array(
                // #type tells drupal what kind of element to build
                '#type' => 'textfield',
                // we want this field to be required
                '#required' => TRUE,
                // The "label" for this field
                '#title' => t("Your Keyword"),
                // Optional description
                '#description' => t('Keyword Search'),
        );
 
        $form['submit'] = array(
                '#type' => 'submit',
                // #value is the text to display inside the button
                '#value' => t('Submit'),
        );
 
        return $form;
}


/*
 * Define a validation function that drupal will
 * automatically call when the submit button is pressed.
 */
function aspenyoutubeinput_form_validate($form, &$form_state) {
        // Drupal stows away all of the form elements into
        // $form_state['values'].  We find our 'friends_email'
        // element and assign it to a variable for easy
        // reference.
        $keywordtwo = $form_state['values']['keywordtwo'];
}
 